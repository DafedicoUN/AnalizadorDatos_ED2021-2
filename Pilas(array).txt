import java.io.*;
import java.util.*;

class stack_array{
  int top, size;
  double[]stack;

stack_array(int s){
  this.size=s;
  this.top=-1;
  this.stack=new double[s];
}
boolean Empty(){
  return (top==-1); 
}
boolean Full(){
  return (top==size-1);  
}
public void stacks(double data){
  if (Full()){
    System.out.println("Stack is full");
}
else{ 
  top++;
  stack[top]=data;
  }
}

public void unstack(){
      if (Empty()){
        System.out.println("Stack is empty");
      }
      else{
        top--;
      }
    }
public void stackFind(double find){
      if (Empty()){
        System.out.println("Stack is empty");
        return;
      } 
      else{
        for (int i=0;i<top+1;i++){
          if (find==stack[i]){
            System.out.println("found at pos:"+""+ i );
            return ;
          }                 
        }
        System.out.println("Not found");
      } 
    }
    public void stackDisplay(){
      if (Empty()){
        System.out.println("Stack is empty");
      } 
      else{
        for (int i=0;i<top+1;i++){
          if(i!=top){
            System.out.print(stack[i]+" ,");
          }
          else {
            System.out.print(stack[i]+"\n");
          }     
        }
      }
    }
    public void stackEmpty(){
      int i;
      if (Empty()){
        System.out.println("Stack is already empty");   
      } 
      else{
        for( i=0;i<top+1;i++){
          stack[i]=0;     
        }
       top-=i; 
      }
    }
    public void max(){
      if (Empty()){
        System.out.println("Stack  empty");   
      } 
      else{
        double max=0;
        for (int i=0;i<top+1;i++ ){
          if (stack[i]>max){
            max=stack[i]; 
          }
        }
        System.out.println(max);
      }
    }
    public void min(){
      if (Empty()){
        System.out.println("Stack  empty");   
      } 
      else{
        double min=Double.MAX_VALUE;
        for (int i=0;i<top+1;i++ ){
          if (stack[i]<min){
            min=stack[i]; 
          }
        }
        System.out.println(min);
      }
    }
    public void stackAverage(){
      if (Empty()){
        System.out.println("Stack  empty");   
      }
      else{
        double ad=0;
        for (int i=0; i<top+1;i++){
         ad +=stack[i];       
      } 
      System.out.println(ad/(top+1));   
    }
  }
} 
public class Main{
  public static void main(String[] args){
    stack_array s1= new stack_array(4);
    s1.stacks(4.6);
    s1.stacks(0.1);
    s1.stacks(30);
    s1.stacks(2);
    s1.stackAverage();
    s1.max();
    s1.min();
    s1.stackFind(2);
    s1.stackDisplay();
    s1.unstack();
    s1.stackDisplay();
    s1.stackEmpty();
    s1.stackDisplay();
  }
}